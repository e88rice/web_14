<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.koreait.spring_pj.mapper.UserMapper">
    <resultMap id="userVOWithRoles" type="com.koreait.spring_pj.vos.UserVO">
        <collection property="userRoles" ofType="com.koreait.spring_pj.domain.UserRole"
                    javaType="java.util.Set" select="get_user_roles" column="userID"/>
    </resultMap>

    <select id="userVO_with_roles" resultMap="userVOWithRoles">
        SELECT * FROM `user_tbl`
        WHERE `userID` = #{userID}
    </select>

    <select id="get_user_roles" resultType="com.koreait.spring_pj.domain.UserRole">
        SELECT R.`role` FROM `authorize_tbl` A
        INNER JOIN `role_tbl` R
        ON A.`role` = R.`no`
        WHERE A.`userID` = #{userID}
    </select>

    <!-- 유저 회원가입 담당   -->
    <insert id="user_register">
        INSERT INTO `user_tbl` VALUES
        ( #{userID}, #{userPW}, #{userName}, #{userTel}, #{userEmail}, #{userSocial} )
    </insert>
    <!-- 기본적으로 유저가 회원가입시 권한을 2 (USER)로 설정 -->
    <insert id="user_register_authorize">
        INSERT INTO `authorize_tbl` VALUES
        (#{userID}, 2)
    </insert>

        <!--    <resultMap id="userResult" type="com.koreait.spring_pj.vos.UserVO">-->
<!--        <result property="userID" column="userID" />-->
<!--        <result property="userPW" column="userPW" />-->
<!--        <result property="userName" column="userName" />-->
<!--        <result property="userTel" column="userTel" />-->
<!--        <result property="userEmail" column="userEmail" />-->
<!--        <result property="userSocial" column="userSocial" />-->
<!--        <collection property="userRoles" javaType="java.util.Set" ofType="com.koreait.spring_pj.domain.UserRole">-->
<!--            <result column="role" />-->
<!--        </collection>-->
<!--    </resultMap>-->

<!--    <select id="userVO_with_roles" resultMap="userResult">-->
<!--        SELECT  U.*,-->
<!--        R.`role`-->
<!--        from `hotel_db`.`user_tbl` U-->
<!--        LEFT OUTER JOIN `hotel_db`.`authorize_tbl` A-->
<!--        ON U.`userID` = A.`userID`-->
<!--        LEFT OUTER JOIN `hotel_db`.`role_Tbl` R-->
<!--        ON A.`role` = R.`no`-->
<!--        WHERE A.`userID` = #{userID}-->
<!--    </select>-->


</mapper>